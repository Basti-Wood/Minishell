#include "../../include/minishell.h"

int safe_dup(int oldfd)
{
	int newfd;

	newfd = dup(oldfd);
	if (newfd == -1)
		perror("dup failed");
	return (newfd);
}

void safe_dup2(int oldfd, int newfd)
{
	if (dup2(oldfd, newfd) == -1)
	{
		perror("dup2 failed");
		exit(1);
	}
}

int safe_open(char *filename, int flags, mode_t mode)
{
	int fd;

	fd = open(filename, flags, mode);
	if (fd == -1)
		perror(filename);
	return (fd);
}

int safe_close(int fd)
{
	if (fd >= 0)
	{
		if (close(fd) == -1)
		{
			perror("close failed");
			return (-1);
		}
		return (0);
	}
	return (-1);
}

int check_access_and_report(char *filename, int mode, char *error_prefix)
{
	if (access(filename, F_OK) == -1)
	{
		ft_fprintf_stderr("%s: %s: No such file or directory\n",
			error_prefix, filename);
		return (-1);
	}
	if (access(filename, mode) == -1)
	{
		ft_fprintf_stderr("%s: %s: Permission denied\n",
			error_prefix, filename);
		return (-1);
	}
	return (0);
}
